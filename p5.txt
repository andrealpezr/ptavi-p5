Práctica 5 - Sesión SIP
Protocolos para la Transmisión de Audio y Vı́deo en Internet
Versión 8.0.1 - 6.11.2017

Ejercicios

Creación de repositorio para la práctica

1. Con el navegador, dirı́gete al repositorio ptavi-p5 en la cuenta del
profesor en GitHub1 y realiza un fork, de manera que consigas tener
una copia del repositorio en tu cuenta de GitHub. Clona el repositorio
que acabas de crear a local para poder editar los archivos. Trabaja a
partir de ahora en ese repositorio, sincronizando los cambios que vayas
realizando.

Como tarde al final de la práctica, deberás realizar un push para subir
tus cambios a tu repositorio en GitHub. En esta práctica, al contrario
que con las demás, se recomienda hacer frecuentes commits, pero el
push al final.

Análisis de una sesión SIP

Se ha capturado una sesión SIP con Ekiga (archivo sip.cap.gz), que
se puede abrir con Wireshark2 . Se pide rellenar las cuestiones que se
plantean en este guión en el fichero p5.txt que encontrarás también
en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP
con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes
cuestiones:
* ¿Cuántos paquetes componen la captura? 
Hay 954 paquetes

* ¿Cuánto tiempo dura la captura? 
Dura 56.15 segundos

* ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se
trata de una IP pública o de una IP privada? ¿Por qué lo sabes? 
La IP de la máquina donde se está capturando es la 192.168.1.34. Se trata 
de una IP privada al comenzar por 192.168. El rango de Ip's privadas es 192.168.0.0
a 192.168.255.255.

3. Antes de analizar las tramas, mira las estadı́sticas generales que aparecen en el menú 
de Statistics. En el apartado de jerarquı́a de protocolos (Protocol Hierarchy) se puede ver 
el porcentaje del tráfico correspondiente al protocolo TCP y UDP.

* ¿Cuál de los dos es mayor? ¿Tiene esto sentido si estamos hablando
de una aplicación que transmite en tiempo real? 
El porcentaje de TCP es 2.1%, y de UDP es 96,2%. Es mayor UDP, es consistente porque para 
transmitir en tiempo real se utiliza la aplicación UDP (TCP no sirve para aplicaciones de tiempo real). 
Además UDP no espera asentimientos y TCP sí.

* ¿Qué otros protocolos podemos ver en la jerarquı́a de protocolos?¿Cuales crees que son señal y cuales ruido? 
Podemos ver protocolo: Ethernet, IP, SIP, RTP (H.261), DNS, HTTP, ICMP, ARP, STUN. Los protocolos que son señal
(los protocolos que se utilizan para establecer la llamada): UDP,SIP, RTP; los protocolos que son ruido
(son los que capturan la llamada o conexión): Ethernet, ARP, ICMP, IP, Data, STUN, ARP, DNS.

4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye
desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
* Filtra por sip para conocer cuándo se envı́an paquetes SIP. ¿En qué segundos tienen lugar esos envı́os? 
El REGISTER se envía en el segundo 7 (Request), otro REGISTER en el segundo 55 (porque dio fallo de autentificación),
el INVITE en el segundo 14 y 16, los BYE en los segundos 38 y 39, para darse de baja en el 55.

* Y los paquetes con RTP, ¿cuándo se envı́an?
Entre el INVITE y el BYE se envían los paquetes durante los segundos 16,y 38.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las dos primeras tramas de la captura.
* ¿Qué servicio es el utilizado en estas tramas? 
El servicio que utilizan es DNS para saber quien es Erika.

* ¿Cuál es la dirección IP del servidor de nombres del ordenador
que ha lanzado Ekiga? 
La IP del servidor es 80.58.61.250 (quién ha contestado el DNS).

* ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres? 
La dirección Ip que devuelve el servicio de nombres es la 80.64.162.35 (resolución inversa de DNS), 
al cual responde que no tiene servicio.

6. A continuación, hay más de una docena de tramas TCP/HTTP.
* ¿Podrı́as decir la URL que se está pidiendo? 
La URL que se está pidiendo es ekiga.net/ip/.

* ¿Qué user agent (UA) la está pidiendo? 
La está pidiendo Ekiga.
* ¿Qué devuelve el servidor? 
Devuelve un HTTP/1.1 200 OK (text/html), el text/html devuelde 83.36.48.212

* Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y
vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo
que está respondiendo el servidor? 
He recibido la IP 37.134.194.77, que es la dirección IP de mi ordenador(Ubuntu).

7. Hasta la trama 45 se puede observar una secuencia de tramas del
protocolo STUN.
* ¿Por qué se hace uso de este protocolo?
El protocolo de red STUN es del tipo cliente/servidor que permite a los clientes encontrar sus direcciones públicas,
el tipo de NAT del cual ellos están atrás y el puerto Internet asociado por el NAT con el puerto local específico. 
Además sirve para configurar comunicación UDP entre el cliente y el proveedor VOIP para así establecer una llamada. 

* ¿Podrı́as decir si estamos tras un NAT o no?
Estamos tras un NAT porque nos cambia la dirección local, y estamos usando el protocolo STUN.

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es 
desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario 
registra su localización en un servidor Registrar. El Registrar guarda información sobre los
usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
* ¿Qué dirección IP tiene el servidor Registrar?
Tiene la dirección IP 86.64.162.35.

* ¿A qué puerto (del servidor Registrar) se envı́an los paquetes
SIP?
Al puerto (Dst Port) 5060 se envían los paquetes SIP.

* ¿Qué método SIP utiliza el UA para registrarse?
El método REGISTER.

* Además de REGISTER, ¿podrı́as decir qué instrucciones SIP entiende el UA?
Las instrucciones SIP que entiende el UA (Allow) son: INVITE, ACK, OPTIONS, BYE, CANCEL, NOTIFY, REFER, Y MESSAGE.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
* ¿Se registra con éxito en el primer intento?
No, en el paquete 50 se puede ver un 401 Unauthorized.

* ¿Cómo sabemos si el registro se ha realizado correctamente o no?
Porque en el paquete 54 el servidor responde con un 200 ok.

* ¿Podrı́as identificar las diferencias entre el primer intento y el
segundo de registro? (fı́jate en el tamaño de los paquetes y mira
a qué se debe el cambio).
En el primer intento hay 523 bytes, y en el segundo intento 712 bytes. La diferencia está en el número de identificación (nonce).

* ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica
las unidades.
El tiempo de expiración de la sesión es 3600 segundos, una hora.

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar
con el servicio de eco de Ekiga que nos permite comprobar si nos
hemos conectado correctamente. El servicio de eco tiene la dirección
sip:500@ekiga.net. Veamos el INVITE de cerca.
* ¿Puede verse el nombre del que efectúa la llamada, ası́ como su
dirección SIP?
Sí, lo podemos encontrar en From: From: "Gregorio Robles" <sip:grex@ekiga.net>".

* ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
Por un lado tiene mensajes en formato de audio 5002 RTP/AVP, y en formato de vídeo 5006 RTP/AVP. El protocolo es SDP.

* ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
No, el servidor responde con un error, 407 Proxy Authentication Required.

* ¿En qué se diferencia el segundo INVITE más abajo del primero?
¿A qué crees que se debe esto?
Se diferencia en que el primer INVITE tiene 982 bytes, y el segundo INVITE tiene 1181 bytes. También se diferencia en la identificación (nonce), en el segundo INVITE aparecen los mensajes para que el proxy pueda establecer la conexión (llamada), proxy necesita que se autentifique y autorizarle.

11. Una vez conectado, estudia el intercambio de tramas.
* ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
Utilizan dos protocolos: RTP, H.261 y RTCP. RTP es un protocolo de nivel de aplicación utilizado para la transmisión de información en tiempo real, como por ejemplo audio y vídeo en una videoconferencia. El protocolo H.261 es un codificador y comprime audio y vídeo. Y por último el protocolo RTCP envía datos de control entre el cliente-servidor cada cinco segunos aproximadamente.

* ¿Cuál es el tamaño de paquete de los mismos?
El tamaño de los paquetes del protocolo H.261 son variados: 1028 bytes, 1073 bytes, 1037 bytes, 1077 bytes), y de RTP son 214 bytes cada uno.

* ¿Se utilizan bits de padding?
No, si observamos las cabeceras de cada paquete (que está utilizando SDP) el Padding está en False, por lo que no hay relleno.

* ¿Cuál es la periodicidad de los paquetes (en origen; nota que la
captura es en destino)?
La periodicidad se puede observar en el campo Payload type, que es 8kHz. El Timestamp cuando hay un segundo es de 8000 bytes, y en el siguiente el Timestamp es de 160 bytes, con regla de tres lo pasamos a segundos y son 0.02 segundos.

* ¿Cuántos bits/segundo se envı́an?
Hay que pasar los 8kHz a bits, como 1 byte = 8 bits, tendremos 64Kbits/s.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una
opción RTP. Empecemos mirando los flujos RTP.
* ¿Cuántos flujos hay? ¿por qué?
Hay dos flujos (de audio y vídeo) ya que provienen de puertos diferentes. Un puerto es el 5010, y otro es el 5014.

* ¿Cuántos paquetes se pierden?
Hay una opción que te dicen los paquetes que se pierden, que es la opción lost y es 0%, es decir, no se pierde ningún paquete.

* ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el
valor de delta?
El valor máximo de la delta en el puerto 5010 es de 1290.444ms (la del audio), y en el puerto 5014 (la del vídeo) es de 1290.479ms. El valor máximo de delta es el tiempo que pasa entre un paquete y otro.

* ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué
quiere decir eso? ¿Crees que estamos ante una conversación de
calidad?
En RTP Stream Analysis podemos ver que los valores de jitter. En audio, el jitter medio es 42.50ms, y el máximo 119.64 ms. En vídeo el jitter medio es 153.240ms, y el máximo 183.096ms. 
El jitter es la variación de retardo al transmitir los paquetes, debe ser menor de 100ms, y el jitter medio está entorno a 100ms, por lo que estamos ante una conversación de calidad.

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony
-> RTP -> Stream Analysis.
* ¿Cuánto valen el delta y el jitter para el primer paquete que
ha llegado?
El valor de la delta es de 0 ms, y del jitter 0 ms también.

* ¿Podemos saber si éste es el primer paquete que nos han enviado?
Nos aparece que es el paquete 113, podemos saber que es el primer paquete porque el campo Marker está marcado en true.

* Los valores de jitter son menores de 10ms hasta un paquete
dado. ¿Cuál?
Hasta el paquete 246, a partir del paquete 247 (incluido) superan los 10ms.

* ¿A qué se debe el cambio tan brusco del jitter?
Se debe a la reducción del ancho de banda, no llegan paquetes RTP porque se han retrasado llegando con un ratio de 30ms.

* ¿Es comparable el cambio en el valor de jitter con el del delta?
¿Cual es más grande?
No porque no varía de manera proporcional, el jitter varía menos que la delta. Es más grande el valor del jitter, pero la delta varía más.

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la
llamada de voz IP capturada en una ventana emergente. Selecciona
esa llamada y pulsa el botón Graph.
* ¿Cuánto dura la conversación?
La conversación se inicia en el tiempo 14,43s aproximadamente y finaliza en el segundo 39.23s, es decir, dura unos 24,80 segundos.

* ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
SSRC es el número de identificación para poder sincronizar. SSRC del puerto 5014 (vídeo) es 0x43306582, y del puerto 5010 (audio) es 0xBF4AFD37. Hay varios SSRCs porque hay varios flujos: el RTP(h261) es del vídeo, y RTP(g711A) del audio.

15. Identifica la trama donde se finaliza la conversación.
* ¿Qué método SIP se utiliza?
El método BYE

* ¿En qué trama(s)?
En las tramas (packet): 924, 925, 927, y 933.

* ¿Por qué crees que se envı́a varias veces?
Porque no ha recibido el asentimiento del servidor, el 200 OK.

16. Finalmente, se cierra la aplicación de VozIP.
* ¿Por qué aparece una instrucción SIP del tipo REGISTER?
Porque para darse de baja con el servidor manda un nuevo REGISTER con tiempo de expiración 0. De esta manera el servidor Registrar lo elimina.

* ¿En qué trama sucede esto?
Sucede en la trama 950.

* ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
Se diferencia en el campo Expires, en vez de 3600 como en el primero ahora es 0.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

Captura de una sesión SIP

17. Dirı́gete a la web http://www.ekiga.net con el navegador y créate
una cuenta. Lanza Ekiga, y configúralo con los datos de la cuenta
que te acabas de crear. Comprueba que estás conectado (En la barra
al final de la ventana podrás ver “Connected”). Al terminar, cierra
completamente Ekiga.

18. Captura una sesión SIP de una conversación con el número SIP sip:500@ekigan.net.
Recuerda que has de comenzar a capturar tramas antes de arrancar
Ekiga para ver todo el proceso3 .

19. Observa las diferencias en el inicio de la conversación entre el entorno
del laboratorio y el del ejercicio anterior4 :
* ¿Se utilizan DNS y STUN? ¿Por qué?
N necesitaría llamar al DNS porque estoy con mi ip pública. STUN siempre se suele utilizar para saber si estamos detrás de NAT.

* ¿Son diferentes el registro y la descripción de la sesión?
Sí, tienen características similares, pero el REGISTER aparece en la cabecera, y la descripción de la sesión aparece en el cuerpo del mensaje.

20. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
* ¿Cuántos flujos tenemos?
Habrá dos flujos, uno de audio por cada usuario de la llamada.

* ¿Cuál es su periodicidad?

* ¿Cuánto es el valor máximo del delta y los valores medios y
máximo del jitter?

* ¿Podrı́as reproducir la conversación desde Wireshark? ¿Cómo?
Comprueba que poniendo un valor demasiado pequeño para el
buffer de jitter, la conversación puede no tener la calidad necesaria.

* ¿Sabrı́as decir qué tipo de servicio ofrece sip:500@ekiga.net?

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]


21. Filtra por los paquetes SIP de la captura y guarda únicamente los
paquetes SIP como p5.pcapng. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás añadirlo al repositorio.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]
[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

